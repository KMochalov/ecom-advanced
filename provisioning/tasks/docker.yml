---
-   name: Обновляем пакеты
    apt:
      update_cache: yes

-   name: Устанавливаем зависимости
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - gnupg
      state: present
      update_cache: yes

-   name: Создаём каталог /etc/apt/keyrings
    file:
      path: /etc/apt/keyrings
      state: directory
      mode: '0755'

-   name: Скачивание GPG ключа Docker
    get_url:
      url: https://download.docker.com/linux/ubuntu/gpg
      dest: /tmp/docker.gpg
      mode: '0644'

-   name: Импорт GPG ключа Docker и перемещение в /etc/apt/keyrings
    shell:
      cmd: gpg --dearmor -o /etc/apt/trusted.gpg.d/docker.gpg < /tmp/docker.gpg
      creates: /etc/apt/trusted.gpg.d/docker.gpg


-   name: Установка прав доступа для чтения всех пользователей на /etc/apt/trusted.gpg.d/docker.gpg
    ansible.builtin.file:
      path: //etc/apt/trusted.gpg.d/docker.gpg
      mode: 'a+r'

-   name: Добавление Docker репозитория в список источников APT
    block:
      #arch=amd64 вписано хардкодом, т.к. он криво распознал архитектуру сервера
      - name: Добавление Docker репозитория в APT sources
        shell:
          cmd: echo "deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

      - name: Обновление списка пакетов APT
        apt:
          update_cache: yes


-   name: Установка Docker и компонентов
    apt:
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
        - docker-buildx-plugin
        - docker-compose-plugin
      state: present
      update_cache: yes
    notify: Start docker on boot

-   name: Добавление пользователя в группу docker
    user:
        name: root
        groups: docker
        append: yes

-   name: Добавление Docker репозитория в APT sources
    shell:
      cmd: ln -s /usr/bin/docker /usr/local/bin/docker-compose




#-   name: Изменение разрешений файла
#    file:
#        path: /usr/local/bin/docker-compose
#        mode: 'u+x,g+x'

-   name: Удалить старые образы
    cron:
      name: docker-prune
      job: 'docker system prune -f --filter "units=$((30*24))h"'
      minute: '0'
      hour: '1'

-   name: Удалить мусор
    apt:
      autoclean: yes

-   name: Удалить ненужные зависимости
    apt:
      autoclean: yes
